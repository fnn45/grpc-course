// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calculator_pb/calculator.proto

package calculatorpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumRequest struct {
	FirstNumber          int32    `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	SecondNumber         int32    `protobuf:"varint,2,opt,name=second_number,json=secondNumber,proto3" json:"second_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b44e1cc294e667d, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetFirstNumber() int32 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

func (m *SumRequest) GetSecondNumber() int32 {
	if m != nil {
		return m.SecondNumber
	}
	return 0
}

type SumResponse struct {
	SumResult            int32    `protobuf:"varint,1,opt,name=sum_result,json=sumResult,proto3" json:"sum_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b44e1cc294e667d, []int{1}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetSumResult() int32 {
	if m != nil {
		return m.SumResult
	}
	return 0
}

type PrimeNumberDecompositionRequest struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeNumberDecompositionRequest) Reset()         { *m = PrimeNumberDecompositionRequest{} }
func (m *PrimeNumberDecompositionRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeNumberDecompositionRequest) ProtoMessage()    {}
func (*PrimeNumberDecompositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b44e1cc294e667d, []int{2}
}

func (m *PrimeNumberDecompositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeNumberDecompositionRequest.Unmarshal(m, b)
}
func (m *PrimeNumberDecompositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeNumberDecompositionRequest.Marshal(b, m, deterministic)
}
func (m *PrimeNumberDecompositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeNumberDecompositionRequest.Merge(m, src)
}
func (m *PrimeNumberDecompositionRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeNumberDecompositionRequest.Size(m)
}
func (m *PrimeNumberDecompositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeNumberDecompositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeNumberDecompositionRequest proto.InternalMessageInfo

func (m *PrimeNumberDecompositionRequest) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PrimeNumberDecompositionResponse struct {
	Primefactor          int64    `protobuf:"varint,1,opt,name=primefactor,proto3" json:"primefactor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeNumberDecompositionResponse) Reset()         { *m = PrimeNumberDecompositionResponse{} }
func (m *PrimeNumberDecompositionResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeNumberDecompositionResponse) ProtoMessage()    {}
func (*PrimeNumberDecompositionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b44e1cc294e667d, []int{3}
}

func (m *PrimeNumberDecompositionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeNumberDecompositionResponse.Unmarshal(m, b)
}
func (m *PrimeNumberDecompositionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeNumberDecompositionResponse.Marshal(b, m, deterministic)
}
func (m *PrimeNumberDecompositionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeNumberDecompositionResponse.Merge(m, src)
}
func (m *PrimeNumberDecompositionResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeNumberDecompositionResponse.Size(m)
}
func (m *PrimeNumberDecompositionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeNumberDecompositionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeNumberDecompositionResponse proto.InternalMessageInfo

func (m *PrimeNumberDecompositionResponse) GetPrimefactor() int64 {
	if m != nil {
		return m.Primefactor
	}
	return 0
}

type ComputeAvarageRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputeAvarageRequest) Reset()         { *m = ComputeAvarageRequest{} }
func (m *ComputeAvarageRequest) String() string { return proto.CompactTextString(m) }
func (*ComputeAvarageRequest) ProtoMessage()    {}
func (*ComputeAvarageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b44e1cc294e667d, []int{4}
}

func (m *ComputeAvarageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeAvarageRequest.Unmarshal(m, b)
}
func (m *ComputeAvarageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeAvarageRequest.Marshal(b, m, deterministic)
}
func (m *ComputeAvarageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeAvarageRequest.Merge(m, src)
}
func (m *ComputeAvarageRequest) XXX_Size() int {
	return xxx_messageInfo_ComputeAvarageRequest.Size(m)
}
func (m *ComputeAvarageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeAvarageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeAvarageRequest proto.InternalMessageInfo

func (m *ComputeAvarageRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type ComputeAvarageResponse struct {
	Avarage              float64  `protobuf:"fixed64,1,opt,name=avarage,proto3" json:"avarage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputeAvarageResponse) Reset()         { *m = ComputeAvarageResponse{} }
func (m *ComputeAvarageResponse) String() string { return proto.CompactTextString(m) }
func (*ComputeAvarageResponse) ProtoMessage()    {}
func (*ComputeAvarageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b44e1cc294e667d, []int{5}
}

func (m *ComputeAvarageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeAvarageResponse.Unmarshal(m, b)
}
func (m *ComputeAvarageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeAvarageResponse.Marshal(b, m, deterministic)
}
func (m *ComputeAvarageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeAvarageResponse.Merge(m, src)
}
func (m *ComputeAvarageResponse) XXX_Size() int {
	return xxx_messageInfo_ComputeAvarageResponse.Size(m)
}
func (m *ComputeAvarageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeAvarageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeAvarageResponse proto.InternalMessageInfo

func (m *ComputeAvarageResponse) GetAvarage() float64 {
	if m != nil {
		return m.Avarage
	}
	return 0
}

type SquareRootRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRootRequest) Reset()         { *m = SquareRootRequest{} }
func (m *SquareRootRequest) String() string { return proto.CompactTextString(m) }
func (*SquareRootRequest) ProtoMessage()    {}
func (*SquareRootRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b44e1cc294e667d, []int{6}
}

func (m *SquareRootRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRootRequest.Unmarshal(m, b)
}
func (m *SquareRootRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRootRequest.Marshal(b, m, deterministic)
}
func (m *SquareRootRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRootRequest.Merge(m, src)
}
func (m *SquareRootRequest) XXX_Size() int {
	return xxx_messageInfo_SquareRootRequest.Size(m)
}
func (m *SquareRootRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRootRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRootRequest proto.InternalMessageInfo

func (m *SquareRootRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type SquareRootResponse struct {
	NumberRoot           float64  `protobuf:"fixed64,1,opt,name=number_root,json=numberRoot,proto3" json:"number_root,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRootResponse) Reset()         { *m = SquareRootResponse{} }
func (m *SquareRootResponse) String() string { return proto.CompactTextString(m) }
func (*SquareRootResponse) ProtoMessage()    {}
func (*SquareRootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b44e1cc294e667d, []int{7}
}

func (m *SquareRootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRootResponse.Unmarshal(m, b)
}
func (m *SquareRootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRootResponse.Marshal(b, m, deterministic)
}
func (m *SquareRootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRootResponse.Merge(m, src)
}
func (m *SquareRootResponse) XXX_Size() int {
	return xxx_messageInfo_SquareRootResponse.Size(m)
}
func (m *SquareRootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRootResponse proto.InternalMessageInfo

func (m *SquareRootResponse) GetNumberRoot() float64 {
	if m != nil {
		return m.NumberRoot
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "calculator.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calculator.SumResponse")
	proto.RegisterType((*PrimeNumberDecompositionRequest)(nil), "calculator.PrimeNumberDecompositionRequest")
	proto.RegisterType((*PrimeNumberDecompositionResponse)(nil), "calculator.PrimeNumberDecompositionResponse")
	proto.RegisterType((*ComputeAvarageRequest)(nil), "calculator.ComputeAvarageRequest")
	proto.RegisterType((*ComputeAvarageResponse)(nil), "calculator.ComputeAvarageResponse")
	proto.RegisterType((*SquareRootRequest)(nil), "calculator.SquareRootRequest")
	proto.RegisterType((*SquareRootResponse)(nil), "calculator.SquareRootResponse")
}

func init() {
	proto.RegisterFile("calculator/calculator_pb/calculator.proto", fileDescriptor_5b44e1cc294e667d)
}

var fileDescriptor_5b44e1cc294e667d = []byte{
	// 381 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0x4f, 0x4f, 0xc2, 0x40,
	0x10, 0xc5, 0x2d, 0x04, 0x8c, 0x53, 0x24, 0x61, 0x13, 0x91, 0x34, 0x41, 0x60, 0xbd, 0x60, 0x20,
	0x60, 0x30, 0x26, 0x7a, 0x54, 0xb8, 0x6a, 0x4c, 0xeb, 0x49, 0x0f, 0x4d, 0x5b, 0x17, 0xd3, 0xa4,
	0xed, 0x96, 0xfd, 0x43, 0xe2, 0xf7, 0xf6, 0x03, 0x18, 0xfa, 0x87, 0x2e, 0x08, 0xe2, 0xad, 0xf3,
	0xf6, 0x37, 0xef, 0x6d, 0x66, 0xba, 0x70, 0xe5, 0x39, 0x81, 0x27, 0x03, 0x47, 0x50, 0x36, 0x2e,
	0x3e, 0xed, 0xd8, 0x55, 0xaa, 0x51, 0xcc, 0xa8, 0xa0, 0x08, 0x0a, 0x05, 0xbf, 0x02, 0x58, 0x32,
	0x34, 0xc9, 0x42, 0x12, 0x2e, 0x50, 0x0f, 0x6a, 0x73, 0x9f, 0x71, 0x61, 0x47, 0x32, 0x74, 0x09,
	0x6b, 0x69, 0x5d, 0xad, 0x5f, 0x31, 0xf5, 0x44, 0x7b, 0x4e, 0x24, 0x74, 0x09, 0xa7, 0x9c, 0x78,
	0x34, 0xfa, 0xc8, 0x99, 0x52, 0xc2, 0xd4, 0x52, 0x31, 0x85, 0xf0, 0x10, 0xf4, 0xc4, 0x95, 0xc7,
	0x34, 0xe2, 0x04, 0xb5, 0x01, 0xb8, 0x0c, 0x6d, 0x46, 0xb8, 0x0c, 0x44, 0x66, 0x7a, 0xc2, 0x13,
	0x40, 0x06, 0x02, 0xdf, 0x43, 0xe7, 0x85, 0xf9, 0x21, 0x49, 0x9b, 0x67, 0xc4, 0xa3, 0x61, 0x4c,
	0xb9, 0x2f, 0x7c, 0x1a, 0xe5, 0x17, 0x6b, 0x42, 0x55, 0xb9, 0x52, 0xd9, 0xcc, 0x2a, 0x3c, 0x83,
	0xee, 0xfe, 0xd6, 0x2c, 0xbd, 0x0b, 0x7a, 0xbc, 0x62, 0xe6, 0x8e, 0x27, 0x68, 0x6e, 0xa0, 0x4a,
	0x78, 0x0c, 0x67, 0x53, 0x1a, 0xc6, 0x52, 0x90, 0x87, 0xa5, 0xc3, 0x9c, 0x4f, 0xb2, 0x3b, 0xb6,
	0xb2, 0x8e, 0x9d, 0x40, 0x73, 0xbb, 0x21, 0x0b, 0x6b, 0xc1, 0xb1, 0x93, 0x4a, 0x49, 0x8b, 0x66,
	0xe6, 0x25, 0x1e, 0x40, 0xc3, 0x5a, 0x48, 0x87, 0x11, 0x93, 0x52, 0x71, 0x28, 0xe0, 0x16, 0x90,
	0x0a, 0x67, 0xe6, 0x1d, 0xd0, 0xd3, 0x73, 0x9b, 0x51, 0x2a, 0xb2, 0x00, 0x48, 0xa5, 0x15, 0x38,
	0xf9, 0x2e, 0x41, 0x63, 0xba, 0x5e, 0xae, 0x45, 0xd8, 0xd2, 0xf7, 0x08, 0xba, 0x83, 0xb2, 0x25,
	0x43, 0xd4, 0x1c, 0x29, 0x7f, 0x42, 0xb1, 0x74, 0xe3, 0xfc, 0x97, 0x9e, 0xc6, 0xe1, 0x23, 0xf4,
	0x05, 0xad, 0x7d, 0xe3, 0x45, 0x03, 0xb5, 0xed, 0xc0, 0xfe, 0x8c, 0xe1, 0xff, 0xe0, 0x3c, 0xf8,
	0x5a, 0x43, 0xef, 0x50, 0xdf, 0x1c, 0x31, 0xea, 0xa9, 0x1e, 0x3b, 0xf7, 0x65, 0xe0, 0xbf, 0x90,
	0xdc, 0xbc, 0xaf, 0xa1, 0x27, 0x80, 0x62, 0xbc, 0xa8, 0xbd, 0x31, 0x80, 0xed, 0x1d, 0x19, 0x17,
	0xfb, 0x8e, 0x73, 0xc3, 0xc7, 0xfa, 0x5b, 0xad, 0x40, 0x62, 0xd7, 0xad, 0x26, 0xef, 0xec, 0xe6,
	0x27, 0x00, 0x00, 0xff, 0xff, 0x85, 0x15, 0x25, 0x90, 0x94, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculatorServiceClient is the client API for CalculatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorServiceClient interface {
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	PrimeNumberDecomposition(ctx context.Context, in *PrimeNumberDecompositionRequest, opts ...grpc.CallOption) (CalculatorService_PrimeNumberDecompositionClient, error)
	ComputeAvarage(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_ComputeAvarageClient, error)
	SquareRoot(ctx context.Context, in *SquareRootRequest, opts ...grpc.CallOption) (*SquareRootResponse, error)
}

type calculatorServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculatorServiceClient(cc *grpc.ClientConn) CalculatorServiceClient {
	return &calculatorServiceClient{cc}
}

func (c *calculatorServiceClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) PrimeNumberDecomposition(ctx context.Context, in *PrimeNumberDecompositionRequest, opts ...grpc.CallOption) (CalculatorService_PrimeNumberDecompositionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[0], "/calculator.CalculatorService/PrimeNumberDecomposition", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServicePrimeNumberDecompositionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculatorService_PrimeNumberDecompositionClient interface {
	Recv() (*PrimeNumberDecompositionResponse, error)
	grpc.ClientStream
}

type calculatorServicePrimeNumberDecompositionClient struct {
	grpc.ClientStream
}

func (x *calculatorServicePrimeNumberDecompositionClient) Recv() (*PrimeNumberDecompositionResponse, error) {
	m := new(PrimeNumberDecompositionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) ComputeAvarage(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_ComputeAvarageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[1], "/calculator.CalculatorService/ComputeAvarage", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceComputeAvarageClient{stream}
	return x, nil
}

type CalculatorService_ComputeAvarageClient interface {
	Send(*ComputeAvarageRequest) error
	CloseAndRecv() (*ComputeAvarageResponse, error)
	grpc.ClientStream
}

type calculatorServiceComputeAvarageClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceComputeAvarageClient) Send(m *ComputeAvarageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorServiceComputeAvarageClient) CloseAndRecv() (*ComputeAvarageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ComputeAvarageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) SquareRoot(ctx context.Context, in *SquareRootRequest, opts ...grpc.CallOption) (*SquareRootResponse, error) {
	out := new(SquareRootResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/SquareRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalculatorServiceServer is the server API for CalculatorService service.
type CalculatorServiceServer interface {
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	PrimeNumberDecomposition(*PrimeNumberDecompositionRequest, CalculatorService_PrimeNumberDecompositionServer) error
	ComputeAvarage(CalculatorService_ComputeAvarageServer) error
	SquareRoot(context.Context, *SquareRootRequest) (*SquareRootResponse, error)
}

func RegisterCalculatorServiceServer(s *grpc.Server, srv CalculatorServiceServer) {
	s.RegisterService(&_CalculatorService_serviceDesc, srv)
}

func _CalculatorService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_PrimeNumberDecomposition_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeNumberDecompositionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServiceServer).PrimeNumberDecomposition(m, &calculatorServicePrimeNumberDecompositionServer{stream})
}

type CalculatorService_PrimeNumberDecompositionServer interface {
	Send(*PrimeNumberDecompositionResponse) error
	grpc.ServerStream
}

type calculatorServicePrimeNumberDecompositionServer struct {
	grpc.ServerStream
}

func (x *calculatorServicePrimeNumberDecompositionServer) Send(m *PrimeNumberDecompositionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CalculatorService_ComputeAvarage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServiceServer).ComputeAvarage(&calculatorServiceComputeAvarageServer{stream})
}

type CalculatorService_ComputeAvarageServer interface {
	SendAndClose(*ComputeAvarageResponse) error
	Recv() (*ComputeAvarageRequest, error)
	grpc.ServerStream
}

type calculatorServiceComputeAvarageServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceComputeAvarageServer) SendAndClose(m *ComputeAvarageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorServiceComputeAvarageServer) Recv() (*ComputeAvarageRequest, error) {
	m := new(ComputeAvarageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CalculatorService_SquareRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SquareRootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).SquareRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/SquareRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).SquareRoot(ctx, req.(*SquareRootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CalculatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculatorService",
	HandlerType: (*CalculatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _CalculatorService_Sum_Handler,
		},
		{
			MethodName: "SquareRoot",
			Handler:    _CalculatorService_SquareRoot_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeNumberDecomposition",
			Handler:       _CalculatorService_PrimeNumberDecomposition_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ComputeAvarage",
			Handler:       _CalculatorService_ComputeAvarage_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "calculator/calculator_pb/calculator.proto",
}
