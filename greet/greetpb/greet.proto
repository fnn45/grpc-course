syntax = "proto3";

package greet;
option go_package="greet_pb";

message Greeting {
    string first_name = 1;
    string last_name = 2;
}

message GreetRequest {
    Greeting greeting = 1;
}

message GreetResponse {
    string Result = 1;
}

message GreetManyTimesRequest {
    Greeting greating = 1;
}

message GreetManyTimesResponse {
    string result = 1;
}

message LongGreetRequest {
    Greeting greeting = 1;
}

message LongGreetResponse {
    string result = 1;
}

message GreetEveryOneRequest {
    Greeting greeting = 1;
}

message GreetEveryOneResponse {
    string result = 1;
}

message GreetWithDeadlineRequest {
    Greeting greeting = 1;
}

message GreetWithDeadlineResponse {
    string result = 1;
}


service GreetService{
    rpc Greet(GreetRequest) returns (GreetResponse) {};


    rpc GreetManyTimes(GreetManyTimesRequest) returns (stream GreetManyTimesResponse) {};

    // client streaming

    rpc LongGreet(stream LongGreetRequest) returns (LongGreetResponse) {};

    // BiDi streaming
    // in this case it is not necessary to send response after each request from client

    rpc GreetEveryOne(stream GreetEveryOneRequest) returns (stream GreetEveryOneResponse) {};


    // Unary with deadline
    rpc GreetWithDeadline(GreetWithDeadlineRequest) returns (GreetWithDeadlineResponse) {};

}